<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>terasoluna-tourreservation-web</artifactId>
  <packaging>war</packaging>
  <name>TERASOLUNA Server Framework for Java (5.x) - Tour Reservation Application - Web Layer</name>
  <description>Web layer of Tour Reservation Application using TERASOLUNA Server Framework for Java (5.x)</description>

  <parent>
    <groupId>org.terasoluna.app</groupId>
    <artifactId>terasoluna-tourreservation</artifactId>
    <version>5.6.0.RELEASE</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <!-- Please generate the war file using following Maven command. * Generate for local development environment 
    mvn clean package * Generate for test or production environment (exclude the projectName-env.jar) mvn 
    -P warpack clean package * Generate for test or production environment (include the projectName-env.jar) 
    mvn -P warpack-with-env clean package Details of Maven profile refer to http://maven.apache.org/guides/introduction/introduction-to-profiles.html 
    . -->
  <profiles>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>terasoluna-tourreservation-env</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>warpack</id>
    </profile>
    <profile>
      <id>warpack-with-env</id>
      <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>terasoluna-tourreservation-env</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**/reservationReportExcel.xlsx</exclude>
        </excludes>
      </resource>
    </resources>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>terasoluna-tourreservation-domain</artifactId>
    </dependency>

    <!-- == Begin TERASOLUNA == -->
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-web-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-web-jsp-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-security-web-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.terasoluna.gfw</groupId>
      <artifactId>terasoluna-gfw-recommended-web-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <!-- == End TERASOLUNA == -->

    <!-- == Begin Tomcat == -->
    <!-- Servlet API 3.0 & JSP API 2.2 -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jsp-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- JavaEE/SE APIs -->
    <!-- Required only for Tomcat. If run on other J2EE server, remove this dependency and use provided 
      tag libraries. -->
    <dependency>
      <groupId>org.apache.taglibs</groupId>
      <artifactId>taglibs-standard-jstlel</artifactId>
    </dependency>
    <!-- == End Tomcat == -->

    <!-- == Begin PDF Support == -->
    <dependency>
      <groupId>com.github.librepdf</groupId>
      <artifactId>openpdf</artifactId>
    </dependency>
    <!-- == End PDF Support == -->

    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave-instrumentation-spring-webmvc</artifactId>
    </dependency>
    <!-- Instruments the underlying OkHttpClient requests that call the backend -->
    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave-instrumentation-okhttp3</artifactId>
    </dependency>

    <!-- Integrates so you can use log patterns like %X{traceId}/%X{spanId} -->
    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave-context-slf4j</artifactId>
    </dependency>

    <!-- The below are needed to report traces to http://127.0.0.1:9411/api/v2/spans -->
    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave</artifactId>
    </dependency>
    <dependency>
      <groupId>io.zipkin.reporter2</groupId>
      <artifactId>zipkin-reporter-brave</artifactId>
    </dependency>
    <dependency>
      <groupId>io.zipkin.reporter2</groupId>
      <artifactId>zipkin-sender-okhttp3</artifactId>
    </dependency>

    <!-- == Begin Unit Test == -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-el</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- == End Unit Test == -->

    <!-- == Begin Coding Support == -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- == End Coding Support == -->

  </dependencies>

  <properties>
    <project.root.basedir>${project.parent.basedir}</project.root.basedir>
  </properties>
</project>
